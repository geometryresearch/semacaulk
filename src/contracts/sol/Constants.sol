// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

library Constants {
    // The base field
    uint256 constant PRIME_Q =
        21888242871839275222246405745257275088696311157297823662689037894645226208583;

    // The scalar field
    uint256 constant PRIME_R =
        21888242871839275222246405745257275088548364400416034343698204186575808495617;

    // Compute this value with Fr::from(128).inverse().unwrap()
    uint256 constant DOMAIN_SIZE_INV = 0x300385D5FB6F3CE964DFA52B147E55AC6DE38077E8C5FDB0215A31A8C8200001;
    uint256 constant LOG2_DOMAIN_SIZE = 7;
    uint256 constant OMEGA = 0x16E73DFDAD310991DF5CE19CE85943E01DCB5564B6F24C799D0E470CBA9D1811;
    uint256 constant OMEGA_N = 0x1332CB377D53B9C681AFA4DC09F66BC37E3F2F33DEB33D9B40BD245C971B2447;

    // These values should be overwritten with new ones from a trusted setup.
    // During development, remember to update these values if you use
    // unsafe_setup() and change the table size!
    // srs_g1[table_size] x and y
    uint256 constant SRS_G1_T_X = 0x29BCDB70164C5F62AD12BE3837173A888058A064B170C030EAD63A9FFAFBDB23;
    uint256 constant SRS_G1_T_Y = 0x10C2048A2862BB0E05902753D0792397A865E171A49F71818874414E0AC29251;

    // srs_g2[1] x0, x1, y0, and y1
    uint256 constant SRS_G2_1_X_0 = 0x2E99D08A8067C9B3A676FC036189692C35018295651ADF2F4BD8131ADA006BE9;
    uint256 constant SRS_G2_1_X_1 = 0x073544A7FAA45857386F4D40063F6DF57B8447599F53E94ADB8DE3D1BF23DD8C;
    uint256 constant SRS_G2_1_Y_0 = 0x305BA413B77C578CDB63D30EE75B4FF90841756EFAF642EE9F61A07CF8CBF28A;
    uint256 constant SRS_G2_1_Y_1 = 0x23516FBCAD5DD180B5D88DB543167FF199B371BBA13F78B4B68AB455EFD44991;
}
