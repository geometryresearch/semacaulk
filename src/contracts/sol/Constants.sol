// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

library Constants {
    // The base field
    uint256 constant PRIME_Q =
        21888242871839275222246405745257275088696311157297823662689037894645226208583;

    // The scalar field
    uint256 constant PRIME_R =
        21888242871839275222246405745257275088548364400416034343698204186575808495617;

    // TODO: this could go into the VerifyingKey
    // Compute this value with Fr::from(1024).inverse().unwrap()
    uint256 constant domainSizeInv = 0x3058355F447953C1ADE231A513E0F80710E9DB4E679B02351F90FD168B040001;
    uint256 constant log2DomainSize = 10;
    uint256 constant omega = 0x16E73DFDAD310991DF5CE19CE85943E01DCB5564B6F24C799D0E470CBA9D1811;
    uint256 constant omega_n = 0x1332CB377D53B9C681AFA4DC09F66BC37E3F2F33DEB33D9B40BD245C971B2447;
}
